


/***
Elaboraci√≥n de los diagramas del modelo de dominio del
proyecto GA2-220501093-AA2-EV01
Criterios de evaluaci√≥n:
‚óè Representa el negocio en t√©rminos de clases abstractas, generando un modelo de dominio
consistente.
2. Lista de chequeo
No. VARIABLES/INDICADORES DE LOGRO CUMPLE Observaciones
S√ç NO

1. Identifica el tipo de diagrama apropiado para modelar
el dominio. 20%
2. Diagrama con UML los artefactos del sistema diagrama
de clases y de paquetes.30%
3. Maneja herramientas de software para apoyar la
elaboraci√≥n de los diagramas.20%
4.Elabora documento plantilla de casos de uso con base
en est√°ndares de documentaci√≥n. 20%
5.Sigue las instrucciones para la elaboraci√≥n de un
diagrama de dominio del proyecto y el modelo
conceptual resultante se presenta ordenado y de f√°cil
lectura.10%
**/

/***
Diagramas y documentaciopn de actividades del proyecto

1. üéØ Objetivo General de la Evidencia
El prop√≥sito de esta evidencia es representar gr√°ficamente y documentar las funciones clave del software mediante diagramas de actividades UML y un informe de an√°lisis. Esto permite comprender el flujo de trabajo del sistema, facilitar la comunicaci√≥n entre los involucrados y sentar las bases para una especificaci√≥n formal del software.
2. üß© Parte 1: Diagramas de Actividades UML
a. ¬øQu√© debes incluir?
Para cada funci√≥n principal del sistema, elabora un diagrama de actividades que muestre:
Inicio del proceso
Acciones o actividades
Decisiones (condiciones)
Flujo alternativo (si aplica)
Finalizaci√≥n del proceso
b. Casos de uso sugeridos:
Puedes elegir entre los siguientes (o incluir otros relevantes al proyecto):
Registro y autenticaci√≥n de usuarios
Creaci√≥n de cuentas
Recuperaci√≥n de contrase√±as
Registro de sesiones activas
Registro de llegada de mercanc√≠as
Validaci√≥n de pedidos
Notificaci√≥n al departamento de inventarios
Gesti√≥n de pagos a proveedores
c. Herramientas recomendadas:
Draw.io
Lucidchart
StarUML
Visual Paradigm

3. üìù Parte 2: Informe de An√°lisis
a. Estructura sugerida del informe:
I. Introducci√≥n
Breve descripci√≥n del proyecto
Objetivo del informe
II. Interpretaci√≥n del informe de requisitos
¬øQu√© requerimientos funcionales y no funcionales se est√°n abordando?
Ejemplo: Gesti√≥n de usuarios, control de inventario, pagos, etc.
III. Metodolog√≠a de desarrollo
Se sigue la metodolog√≠a XP (Extreme Programming), enfocada en entregas frecuentes de m√≥dulos funcionales independientes.
IV. Descripci√≥n de los diagramas
Para cada diagrama, incluye:
Nombre del proceso
Descripci√≥n del flujo
Relaci√≥n con los requisitos funcionales
Justificaci√≥n de decisiones tomadas en el modelado
V. Conclusi√≥n
C√≥mo estos diagramas y el an√°lisis contribuyen a una mejor comprensi√≥n del sistema
Importancia de esta documentaci√≥n para futuras fases del desarrollo
4. ‚úÖ Criterios de Evaluaci√≥n que est√°s cumpliendo
Aplicaci√≥n correcta del lenguaje UML
Claridad en la representaci√≥n de los procesos
Coherencia entre los diagramas y los requisitos
Documentaci√≥n detallada y bien estructurada
Uso de metodolog√≠a XP como base del an√°lisis
Los diagramas de actividades trazan flujos de procesos de 
una forma que es sencilla de entender. El Lenguaje Unificado 
de Modelado incluye varios subconjuntos de diagramas, 
incluidos los diagramas de estructuras, los diagramas de 
interacci√≥n y los diagramas de comportamiento. Los 
diagramas de actividades, junto con los diagramas de casos de 
uso y los diagramas de m√°quina de estados, son considerados 
diagramas de comportamiento porque describen lo que debe 
suceder en el sistema que se est√° modelando. Las partes 
interesadas tienen muchos asuntos que manejar, por lo que es 
importante una comunicaci√≥n clara y concisa. Los diagramas 
de actividades ayudan a que las personas en las √°reas de 
negocios y desarrollo de una organizaci√≥n se integren para 
comprender el mismo proceso y comportamiento. Usar√°s un 
conjunto de s√≠mbolos especializados ‚Äîincluidos aquellos para 
pasos de inicio, finalizaci√≥n, fusi√≥n y recepci√≥n en el flujo‚Äî
para crear un diagrama de actividades, lo cual cubriremos con 
m√°s detalle dentro de esta gu√≠a de diagramas de actividades. 
Teniendo en cuenta las actividades y el diagrama de 
actividades desarrollados anteriormente, se realiza el diagrama 
con actividades del proyecto, enfocada en las actividades de la
distribuidora de consumo masivo llamada


Perspectiva del producto   El sistema de informaci√≥n de agenda para citas m√©dicas tiene como fin agilizar el proceso para tomar horas m√©dicas; queremos brindar un sistema que sea autogestionable, donde el  usuario  principal (stakeholder)  que requiera  agendar una  cita  m√©dica lo  pueda realizar a trav√©s de internet, donde no le tome m√°s de cinco (5) minutos el agendamiento.  Sera un sistema que le brindara confianza tanto al usuario principal como al centro m√©dico (tambi√©n stakeholder) ya que ambos ser√°n notificados de cada gesti√≥n que se realice en sistema de informaci√≥n.  Funciones del producto - Seguridad, para acceder al sistema ser√° necesario ingresar a trav√©s de un usuario y una contrase√±a. - Agendamiento: o Calendario, el usuario podr√° consultar la disponibilidad (d√≠as y horas) del m√©dico o profesional de la salud seleccionado. o Agendar, el usuario podr√° reservar la hora seleccionada. o Modificar, el usuario podr√° cambiar la hora seleccionada. o Confirmar, el usuario podr√° ratificar que asistir√° a la hora seleccionada. o Anular, el usuario podr√° cancelar la hora seleccionada, notific√°ndole as√≠ al centro m√©dico que no asistir√° y la hora quedar√° de nuevo disponible para otro usuario. - Comprobante, cada gesti√≥n que se realice generar√° un documento el cual ser√° enviado al correo electr√≥nico de los usuarios (personas que agendan la cita m√©dica y centro m√©dico donde se realizara la atenci√≥n).  Caracter√≠sticas de los usuarios (stakeholders)   El sistema de informaci√≥n contara con tres (3) tipos de usuarios (stakeholders) que se relacionan a continuaci√≥n y se nombran sus respectivas caracter√≠sticas: - Usuario administrador, aplica para el encargado del sistema de informaci√≥n, este tendr√° la labor de poner a disposici√≥n y/o modificar el calendario para los dem√°s usuarios,  podr√°  crear,  modificar  y  eliminar  centros  m√©dicos  y/o  doctores  o profesionales de la salud del sistema de informaci√≥n. - Usuario normal, aplica para las personas que requieren agendar horas m√©dicas, estos podr√°n consultar el calendario, agendar, modificar y/o anular una cita m√©dica. La creaci√≥n del usuario normal es autogestionable. - Usuario  centro  m√©dico,  aplica  para  los  centros  m√©dicos  donde  se  realizar√°  la atenci√≥n al usuario normal, este tipo de usuario podr√° consultar el calendario y/o anular una cita m√©dica. 

5  Restricciones Entre las restricciones que se pueden presentar en el sistema de informaci√≥n de agenda para citas m√©dicas tenemos: - Se debe contar con acceso a internet para poder hacer uso del sistema de informaci√≥n. - Se debe contar con un manejo b√°sico de las herramientas de internet. - El sistema de informaci√≥n debe ser desarrollado en versi√≥n web, pues el acceso al sistema debe ser en l√≠nea y estar disponible para cualquier dispositivo con acceso a internet. - Es  obligatorio  acceder  al  sistema  de  informaci√≥n  a  trav√©s  de  un  usuario  y  una contrase√±a. - Para los usuarios es obligatorio tener un correo electr√≥nico para todos los procesos.  Requisitos Funcionales El sistema debe permitir: - Validar el usuario y la contrase√±a del usuario que desea ingresar al sistema. - Crear el calendario con la agenda de los m√©dicos y/o profesionales de la salud. - Crear centros m√©dicos. - Crear m√©dicos y/o profesionales de la salud. - Modificar centros m√©dicos. - Modificar m√©dicos y/o profesionales de la salud. - Eliminar centros m√©dicos. - Eliminar m√©dicos y/o profesionales de la salud. - Consultar la disponibilidad de los m√©dicos y/o profesionales de la salud de acuerdo a su calendario. - Agendar la cita m√©dica seleccionada. - Bloquear la hora medica seleccionada para que otro usuario no pueda seleccionar de nuevo la misma hora. - Modificar la cita m√©dica seleccionada. - Anular o cancelar la cita m√©dica seleccionada. - Confirmar la cita m√©dica seleccionada. - Generar comprobantes de los registros realizados en el sistema. - Enviar a trav√©s de correo electr√≥nico los comprobantes generados.  
/***
Resumen T√©cnico y Pr√°ctico del Repositorio DBInterface

El repositorio DBInterface es un proyecto que proporciona una interfaz gr√°fica para la recolecci√≥n de datos personales, utilizando la biblioteca Tkinter de Python. A continuaci√≥n, se presenta un resumen de sus caracter√≠sticas y funcionalidades.

Caracter√≠sticas Principales

Interfaz Gr√°fica: Utiliza Tkinter para crear una interfaz amigable que permite a los usuarios ingresar datos de manera sencilla.

Generaci√≥n de Archivos CSV: Permite la creaci√≥n de archivos CSV a partir de los datos ingresados, facilitando su exportaci√≥n y an√°lisis.

Base de Datos SQLite: Los datos recolectados se almacenan en una base de datos SQLite, lo que permite una gesti√≥n eficiente de la informaci√≥n.

Estructura del Repositorio

Archivos Clave:

README.md: Documentaci√≥n del proyecto.
busca.py: Script para buscar datos en la base de datos.
database.py: Manejo de la base de datos SQLite.
genero.py: Funciones relacionadas con la gesti√≥n de datos.
index.py: Archivo principal que ejecuta la aplicaci√≥n.
statisk.ipynb: Notebook de Jupyter para an√°lisis de datos.
Licencia: GPL-3.0, lo que permite su uso y modificaci√≥n bajo ciertas condiciones.

Instalaci√≥n y Uso

Requisitos: Python y las bibliotecas necesarias deben estar instaladas.

Instalaci√≥n: Se puede instalar el proyecto utilizando npm (aunque esto es inusual para un proyecto de Python, puede referirse a un entorno de desarrollo espec√≠fico).

Ejecuci√≥n: Al ejecutar index.py, se inicia la interfaz gr√°fica donde los usuarios pueden ingresar datos.

Conclusi√≥n

El repositorio DBInterface es una herramienta √∫til para la recolecci√≥n y gesti√≥n de datos personales, con una interfaz gr√°fica accesible y la capacidad de exportar datos a CSV. Su integraci√≥n con SQLite permite un manejo eficiente de la informaci√≥n recolectada.**/
**/


/***
Elaboraci√≥n de los Diagramas del Modelo de Dominio del Proyecto
Proyecto: Sistema de Informaci√≥n de Agenda para Citas M√©dicas
Evidencia: GA2-220501093-AA2-EV01

1. Introducci√≥n
El presente informe tiene como objetivo representar gr√°ficamente y documentar el modelo de dominio del sistema de informaci√≥n para la agenda de citas m√©dicas. Este sistema busca agilizar el proceso de agendamiento de citas, brindando una plataforma autogestionable y confiable tanto para los usuarios finales como para los centros m√©dicos. La representaci√≥n del dominio se realizar√° a trav√©s de diagramas UML, espec√≠ficamente diagramas de clases y de paquetes, los cuales facilitan la comprensi√≥n del flujo de trabajo y la comunicaci√≥n entre los involucrados.

2. Identificaci√≥n del Tipo de Diagrama Apropiado para Modelar el Dominio
Para modelar el dominio de un sistema y representar sus componentes en t√©rminos de clases abstractas y sus relaciones, el Diagrama de Clases UML es la herramienta m√°s apropiada. Este diagrama permite una visi√≥n est√°tica de la estructura del sistema, mostrando las clases del sistema, sus atributos, operaciones y las relaciones entre ellas (asociaci√≥n, agregaci√≥n, composici√≥n, herencia). Adicionalmente, el Diagrama de Paquetes UML ser√° √∫til para organizar las clases en grupos l√≥gicos, mejorando la modularidad y la legibilidad del modelo.

3. Diagrama del Modelo de Dominio (Diagrama de Clases y de Paquetes UML)
Se utilizar√° una herramienta de software como Draw.io para la elaboraci√≥n de los diagramas, lo cual facilita el cumplimiento de los est√°ndares UML y la legibilidad.

3.1. Diagrama de Paquetes
Este diagrama organiza las clases l√≥gicas del sistema en paquetes, reflejando una estructura modular.

Fragmento de c√≥digo

package "Sistema de Citas M√©dicas" {
  package "Gesti√≥n de Usuarios" {
    class Usuario
    class Administrador
    class UsuarioNormal
    class CentroMedico
  }
  package "Gesti√≥n de Citas" {
    class CitaMedica
    class Calendario
    class Medico
  }
  package "Comunicaciones" {
    class Comprobante
    class Notificacion
  }
}
Descripci√≥n del Diagrama de Paquetes:

Gesti√≥n de Usuarios: Contiene las clases relacionadas con los diferentes tipos de usuarios del sistema (Administrador, Usuario Normal, Centro M√©dico), que heredan o se relacionan con una clase base Usuario.

Gesti√≥n de Citas: Agrupa las clases fundamentales para el agendamiento y manejo de citas, como CitaMedica, Calendario y Medico.

Comunicaciones: Incluye las clases encargadas de generar y enviar las notificaciones y comprobantes (Comprobante, Notificacion).

3.2. Diagrama de Clases
Este diagrama representa las clases principales del dominio, sus atributos, m√©todos y las relaciones entre ellas.

Fragmento de c√≥digo

classDiagram
    direction LR

    class Usuario {
        +idUsuario: String
        +nombre: String
        +apellido: String
        +correoElectronico: String
        +contrasena: String
        +autenticar(): Boolean
        +recuperarContrasena(): Boolean
        +registrarSesion(): void
    }

    class Administrador {
        +departamento: String
        +cargo: String
        +crearCentroMedico(): void
        +modificarCentroMedico(): void
        +eliminarCentroMedico(): void
        +crearMedico(): void
        +modificarMedico(): void
        +eliminarMedico(): void
        +modificarCalendarioMedico(): void
    }

    class UsuarioNormal {
        +crearCuenta(): Boolean
        +consultarDisponibilidad(): List<CitaMedica>
        +agendarCita(): Boolean
        +modificarCita(): Boolean
        +anularCita(): Boolean
        +confirmarCita(): Boolean
    }

    class CentroMedico {
        +idCentro: String
        +nombre: String
        +direccion: String
        +telefono: String
        +consultarCalendario(): List<CitaMedica>
        +anularCita(): Boolean
    }

    class Medico {
        +idMedico: String
        +nombre: String
        +especialidad: String
        +consultorio: String
        +disponibilidad: List<Calendario>
    }

    class Calendario {
        +idCalendario: String
        +fecha: Date
        +horaInicio: Time
        +horaFin: Time
        +disponible: Boolean
    }

    class CitaMedica {
        +idCita: String
        +fecha: Date
        +hora: Time
        +estado: String (Agendada, Modificada, Anulada, Confirmada)
        +generarComprobante(): Comprobante
        +enviarNotificacion(): void
    }

    class Comprobante {
        +idComprobante: String
        +tipo: String (Agendamiento, Modificaci√≥n, Anulaci√≥n, Confirmaci√≥n)
        +fechaEmision: Date
        +contenido: String
        +enviarPorEmail(): Boolean
    }

    Usuario <|-- Administrador : hereda
    Usuario <|-- UsuarioNormal : hereda
    Usuario <|-- CentroMedico : hereda

    UsuarioNormal "1" -- "N" CitaMedica : agenda
    Medico "1" -- "N" Calendario : tiene
    CitaMedica "1" -- "1" Medico : para
    CitaMedica "1" -- "1" Calendario : ocupa
    CitaMedica "1" -- "1" Comprobante : genera
    CitaMedica "1" -- "N" Notificacion : env√≠a
    CentroMedico "1" -- "N" Medico : asociado a
    Comprobante "1" -- "1" Notificacion : enviado por

    class Notificacion {
        +idNotificacion: String
        +mensaje: String
        +destinatario: String
        +fechaEnvio: Date
        +estadoEnvio: String
    }
Descripci√≥n del Diagrama de Clases:

Usuario: Clase base que representa a cualquier usuario del sistema, con atributos comunes como idUsuario, nombre, correoElectronico y contrasena. Incluye operaciones para autenticar y recuperarContrasena.

Administrador, UsuarioNormal, CentroMedico: Heredan de Usuario y a√±aden atributos y operaciones espec√≠ficas a sus roles.

Administrador: Gestiona CentroMedico y Medico, y modifica Calendario.

UsuarioNormal: Realiza las acciones de agendamiento, modificaci√≥n, anulaci√≥n y confirmaci√≥n de citas.

CentroMedico: Puede consultarCalendario y anularCita.

Medico: Representa a los profesionales de la salud, con su especialidad y disponibilidad (relacionada con Calendario).

Calendario: Detalla los bloques de tiempo disponibles para citas, incluyendo fecha, horaInicio, horaFin y un indicador de disponible.

CitaMedica: La entidad central del sistema, que registra una cita espec√≠fica entre un UsuarioNormal y un Medico en un Calendario determinado. Tiene un estado y puede generarComprobante y enviarNotificacion.

Comprobante: Representa el documento generado por cada gesti√≥n de cita, con su tipo y contenido.

Notificacion: Objeto que encapsula el mensaje y destinatario de las notificaciones, que pueden ser enviadas por Comprobante.

4. Documento Plantilla de Casos de Uso con Base en Est√°ndares de Documentaci√≥n
A continuaci√≥n, se presenta una plantilla para documentar los casos de uso, siguiendo un est√°ndar que facilita la comprensi√≥n y el desarrollo.

Plantilla de Caso de Uso

Nombre del Caso de Uso: [Nombre descriptivo de la funci√≥n]
ID del Caso de Uso: CU-[N√∫mero consecutivo]
Actores: [Lista de los tipos de usuarios que interact√∫an con este caso de uso]
Descripci√≥n: [Breve resumen de la funcionalidad que el caso de uso abarca.]
Precondiciones: [Condiciones que deben cumplirse antes de que el caso de uso pueda iniciarse.]
Postcondiciones: [Estado del sistema una vez que el caso de uso ha finalizado exitosamente.]
Flujo Principal:

[Paso 1 del actor]

[Paso 2 del sistema]

[Paso 3 del actor]
...
N. [√öltimo paso]

Flujos Alternativos:

FA.1: [Condici√≥n del flujo alternativo]

[Paso 1 del flujo alternativo]

[Paso 2 del flujo alternativo]
...
[Retorna al paso X del flujo principal o finaliza.]

Excepciones:

EX.1: [Condici√≥n de error o situaci√≥n excepcional]

[Acci√≥n del sistema en caso de la excepci√≥n]
...
[Mensaje de error, finalizaci√≥n del caso de uso, etc.]

Reglas de Negocio: [Cualquier regla espec√≠fica del negocio que afecte este caso de uso.]
Notas/Comentarios: [Informaci√≥n adicional relevante.]

Ejemplo de Aplicaci√≥n de la Plantilla:

Nombre del Caso de Uso: Agendar Cita M√©dica
ID del Caso de Uso: CU-001
Actores: Usuario Normal
Descripci√≥n: Permite a un usuario con cuenta activa consultar la disponibilidad de los m√©dicos y agendar una cita m√©dica a trav√©s del sistema web.
Precondiciones:

El usuario ha iniciado sesi√≥n en el sistema.

Existen m√©dicos y horarios disponibles en el calendario.

El usuario tiene un correo electr√≥nico v√°lido registrado.

Postcondiciones:

La cita m√©dica ha sido agendada y bloqueada en el calendario.

Se ha generado un comprobante de agendamiento.

Se ha enviado una notificaci√≥n por correo electr√≥nico al usuario normal y al centro m√©dico.

Flujo Principal:

El Usuario Normal accede a la funcionalidad "Agendar Cita".

El Sistema muestra un listado de especialidades m√©dicas o m√©dicos disponibles.

El Usuario Normal selecciona una especialidad o un m√©dico.

El Sistema muestra el calendario de disponibilidad del m√©dico seleccionado (d√≠as y horas).

El Usuario Normal selecciona una fecha y hora disponible.

El Sistema solicita confirmaci√≥n de los detalles de la cita.

El Usuario Normal confirma la cita.

El Sistema verifica la disponibilidad final de la hora seleccionada.

El Sistema registra la cita, la marca como "Agendada", y bloquea la hora en el calendario.

El Sistema genera un comprobante de agendamiento.

El Sistema env√≠a el comprobante al correo electr√≥nico del Usuario Normal y del Centro M√©dico.

El Sistema muestra un mensaje de confirmaci√≥n de agendamiento exitoso al Usuario Normal.

Flujos Alternativos:

FA.1: Horario no disponible (paso 8)

Si la hora seleccionada ya no est√° disponible (ej. otro usuario la agend√≥ simult√°neamente), el Sistema informa al Usuario Normal que el horario no est√° disponible.

El Sistema le ofrece opciones de horarios alternativos o le permite volver al calendario.

[Retorna al paso 4 del flujo principal o finaliza.]

Excepciones:

EX.1: Error de conexi√≥n con el servicio de correo (paso 11)

Si ocurre un error al enviar el correo electr√≥nico, el Sistema registra el error internamente.

El Sistema informa al Usuario Normal que la cita fue agendada pero que el comprobante se enviar√° cuando se restablezca el servicio de correo.

Reglas de Negocio:

Las citas solo pueden ser agendadas en horarios previamente definidos como disponibles por el administrador.

Cada cita m√©dica bloquea el horario seleccionado para evitar duplicidades.

El agendamiento de una cita debe generar autom√°ticamente un comprobante y notificaciones por correo electr√≥nico.

Notas/Comentarios:

El sistema debe permitir que el Usuario Normal se cree su propia cuenta de forma autogestionable antes de poder agendar citas.

5. Conclusi√≥n
La elaboraci√≥n de los diagramas de clases y de paquetes, junto con la documentaci√≥n estructurada de los casos de uso, proporciona un modelo de dominio consistente y de f√°cil lectura para el proyecto del sistema de agenda de citas m√©dicas. Estos artefactos son cruciales para:

Representar el negocio en t√©rminos de clases abstractas: Permitiendo una comprensi√≥n clara de las entidades, sus atributos y sus interacciones.

Facilitar la comunicaci√≥n: Sirviendo como un lenguaje com√∫n entre los stakeholders (negocio, desarrollo, pruebas).

Sentar las bases para la implementaci√≥n: Proporcionando una gu√≠a detallada para la arquitectura y el desarrollo del software.

Asegurar la coherencia: Los diagramas y casos de uso garantizan que los requisitos funcionales del cliente se traduzcan correctamente en el dise√±o del sistema.

El uso de herramientas de software como Draw.io no solo agiliza el proceso de elaboraci√≥n de los diagramas, sino que tambi√©n asegura que sigan los est√°ndares UML, contribuyendo a la claridad y profesionalismo de la documentaci√≥n. Este modelo conceptual ordenado y la plantilla de casos de uso son pasos fundamentales para el √©xito del proyecto, en l√≠nea con la metodolog√≠a XP de entregas frecuentes y retroalimentaci√≥n constante.
**/


